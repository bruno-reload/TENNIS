 --CREATE DATABASE TENNIS;

--USE TENNIS;

-- DROP TABLE FIND;
-- DROP TABLE FILL;
-- DROP TABLE TEAM;
-- DROP TABLE PLAYER;
-- DROP TABLE CHALLENGS;
-- DROP TABLE MARKED;
-- DROP TABLE LOCAL;
-- DROP TABLE PHASE;
-- DROP TABLE AWARDS;
-- DROP TABLE THE_MATCH;

--CREATE TABLE PLAYER (
--  NICKNAME VARCHAR (100) PRIMARY KEY,
--  PLAYER_NAME VARCHAR (100)  NOT NULL,
--  PASSWORD VARCHAR (100) NOT NULL
--);

--CREATE TABLE TEAM(
--	ID INT PRIMARY KEY IDENTITY (0, 1),
--	TEAM_NAME VARCHAR (100),
--);
 
--CREATE TABLE FILL(
--	ID INT PRIMARY KEY IDENTITY (0, 1),
--	PLAYER_NICKNAME VARCHAR (100) NOT NULL, 
--	IDTEAM INT NOT NULL, 
--	POSITION VARCHAR (100)  NOT NULL,
--	FOREIGN KEY (IDTEAM) REFERENCES TEAM(ID),
--	FOREIGN KEY (PLAYER_NICKNAME) REFERENCES PLAYER(NICKNAME) ON DELETE CASCADE
--);

--CREATE TABLE THE_MATCH(
--	ID INT PRIMARY KEY IDENTITY (0, 1),
--	START_TIME DATE NOT NULL,
--	END_TIME DATE NOT NULL,
--	MATCH_NAME VARCHAR (100)  NOT NULL,
--);

--CREATE TABLE AWARDS(
--	ID INT PRIMARY KEY IDENTITY (0, 1),
--	POSITION VARCHAR (100) NOT NULL,
--	VALUE VARCHAR (100) NOT NULL,
--	IDMATCH INT NOT NULL,
--	FOREIGN KEY (IDMATCH) REFERENCES THE_MATCH(ID)
--);


--CREATE TABLE PHASE(
--	ID INT PRIMARY KEY IDENTITY (0, 1),
--	PHASE_NAME VARCHAR (100)  NOT NULL,
--	IDMATCH INT NOT NULL,
--	MIN_POINTS INT NOT NULL,
--	FOREIGN KEY (IDMATCH) REFERENCES THE_MATCH(ID) ON DELETE CASCADE
--);

--CREATE TABLE LOCAL(
--	ID INT PRIMARY KEY IDENTITY (0, 1),
--	NEIGHBORHOOD VARCHAR (100),
--	CITY VARCHAR (100),
--	ZIP_CODE VARCHAR (100),
--	STREET VARCHAR (100)
--);

--CREATE TABLE MARKED(
--	ID INT PRIMARY KEY IDENTITY (0, 1),
--	DATE DATE,
--	TIME TIME,
--	IDLOCAL INT NOT NULL,
--	FOREIGN KEY (IDLOCAL) REFERENCES LOCAL(ID)
--);

--CREATE TABLE CHALLENGS(
--	ID INT PRIMARY KEY IDENTITY (0, 1),
--	IDMARKED INT,
--	IDPHASE INT NOT NULL,
--	FINISHED BIT NOT NULL,
--	DURATION TIME NOT NULL,
--	FOREIGN KEY (IDPHASE) REFERENCES PHASE(ID),
--	FOREIGN KEY (IDMARKED) REFERENCES MARKED(ID)
--);

--CREATE TABLE FIND(
--	ID INT PRIMARY KEY IDENTITY (0, 1),
--	POINTS INT,
--	IDTEAM INT,
--	IDCHALLENGS INT,
--	WINNER BIT NOT NULL,
--	FOREIGN KEY (IDTEAM) REFERENCES TEAM(ID),
--	FOREIGN KEY (IDCHALLENGS) REFERENCES CHALLENGS(ID)
--);

--######################################################################################################################

--INSERT INTO PLAYER (NICKNAME, PLAYER_NAME, PASSWORD) VALUES ('BRUNO_CORREIA', 'BRUNO','ADMIN123');
--INSERT INTO PLAYER (NICKNAME, PLAYER_NAME, PASSWORD) VALUES ('VITORIA', 'VITORIA', '123');
--INSERT INTO PLAYER (NICKNAME, PLAYER_NAME, PASSWORD) VALUES ('GEORGE', 'GEORGE', '123');
--INSERT INTO PLAYER (NICKNAME, PLAYER_NAME, PASSWORD) VALUES ('ANDRÉ', 'ANDRÉ', '123');
--INSERT INTO PLAYER (NICKNAME, PLAYER_NAME, PASSWORD) VALUES ('MARQUINHO', 'MARQUINHO', '123');
--INSERT INTO PLAYER (NICKNAME, PLAYER_NAME, PASSWORD) VALUES ('MARIA', 'MARIA', '123');


--INSERT INTO TEAM ( TEAM_NAME) VALUES ('TEMIDOS');
--INSERT INTO TEAM ( TEAM_NAME) VALUES ('ILUMINADOS');

--INSERT INTO FILL (PLAYER_NICKNAME, IDTEAM, POSITION) VALUES ('BRUNO_CORREIA', 0, 'CAPITÃO');
--INSERT INTO FILL (PLAYER_NICKNAME, IDTEAM, POSITION) VALUES ('VITORIA', 0, 'JOGADOR');
--INSERT INTO FILL (PLAYER_NICKNAME, IDTEAM, POSITION) VALUES ('GEORGE', 0, 'JOGADOR');
--INSERT INTO FILL (PLAYER_NICKNAME, IDTEAM, POSITION) VALUES ('ANDRÉ', 1, 'CAPITÃO');
--INSERT INTO FILL (PLAYER_NICKNAME, IDTEAM, POSITION) VALUES ('MARQUINHO', 1, 'JOGADOR');
--INSERT INTO FILL (PLAYER_NICKNAME, IDTEAM, POSITION) VALUES ('MARIA', 1, 'JOGADOR');


--INSERT INTO FIND(IDTEAM, POINTS, IDCHALLENGS, WINNER) VALUES (0, 0, NULL, 0);
--INSERT INTO FIND(IDTEAM, POINTS, IDCHALLENGS, WINNER) VALUES (0, 0, NULL, 0);

--INSERT INTO THE_MATCH (START_TIME, END_TIME, MATCH_NAME) VALUES (SYSDATETIME(), SYSDATETIME(), 'INTERNACIONAL');

--INSERT INTO AWARDS (POSITION, VALUE, IDMATCH) VALUES ('PRIMEIRO COLOCADO', 'R$ 1.000.000,00', 0);
--INSERT INTO AWARDS (POSITION, VALUE, IDMATCH) VALUES ('SEGUNDO COLOCADO', 'R$ 500.000,00', 0);
--INSERT INTO AWARDS (POSITION, VALUE, IDMATCH) VALUES ('TERCEIRO COLOCADO', 'R$ 100.000,00', 0);

--INSERT INTO PHASE (PHASE_NAME, MIN_POINTS, IDMATCH) VALUES ('FASE DE GRUPOS', 6, 0);

--INSERT INTO CHALLENGS (IDPHASE, DURATION, FINISHED) VALUES (0, GETDATE(), 0);
--INSERT INTO CHALLENGS (IDPHASE, DURATION, FINISHED) VALUES (0, GETDATE(), 0);
--INSERT INTO CHALLENGS (IDPHASE, DURATION, FINISHED) VALUES (0, GETDATE(), 0);
--INSERT INTO CHALLENGS (IDPHASE, DURATION, FINISHED) VALUES (0, GETDATE(), 0);

--INSERT INTO LOCAL (STREET, NEIGHBORHOOD, CITY, ZIP_CODE) VALUES ('RUA DO OUVIDOR', 'POSTO 5', 'RIO DE JANEIRO', '2265-11508');
--INSERT INTO LOCAL (STREET, NEIGHBORHOOD, CITY, ZIP_CODE) VALUES ('TAMARINDO CORREIA', 'POSTO 7', 'RIO DE JANEIRO', '2265-11508');
--INSERT INTO LOCAL (STREET, NEIGHBORHOOD, CITY, ZIP_CODE) VALUES ('ESTRADA VELHA', 'POSTO 2', 'RIO DE JANEIRO', '4456-11508');
--INSERT INTO LOCAL (STREET, NEIGHBORHOOD, CITY, ZIP_CODE) VALUES ('ILHA NOVA', 'POSTO 9', 'RIO DE JANEIRO', '2265-7964');
--INSERT INTO LOCAL (STREET, NEIGHBORHOOD, CITY, ZIP_CODE) VALUES ('RUA PAZ DO IGUAÇU', 'POSTO 5', 'RIO DE JANEIRO', '45645-45666');
--INSERT INTO LOCAL (STREET, NEIGHBORHOOD, CITY, ZIP_CODE) VALUES ('RUA MARCOS DE OLIVEIRA', 'POSTO 2', 'RIO DE JANEIRO', '999-45689');

--INSERT INTO MARKED (DATE, TIME, IDLOCAL) VALUES (GETDATE(), SYSDATETIME(), 0);
--INSERT INTO MARKED (DATE, TIME, IDLOCAL) VALUES (GETDATE(), SYSDATETIME(), 1);
--INSERT INTO MARKED (DATE, TIME, IDLOCAL) VALUES (GETDATE(), SYSDATETIME(), 2);
--INSERT INTO MARKED (DATE, TIME, IDLOCAL) VALUES (GETDATE(), SYSDATETIME(), 3);
	
SELECT * FROM PLAYER;

--SELECT P.PLAYER_NAME, F.POSITION, T.TEAM_NAME, FIND.WINNER, FIND.POINTS, PH.PHASE_NAME, M.DATE, M.TIME, L.NEIGHBORHOOD, MA.MATCH_NAME, A.POSITION, A.VALUE
--FROM PLAYER AS P
--JOIN FILL AS F ON P.NICKNAME = F.PLAYER_NICKNAME
--JOIN TEAM AS T ON F.IDTEAM = T.ID AND F.POSITION = 'CAPITÃO'
--JOIN FIND ON FIND.IDTEAM = T.ID
--JOIN CHALLENGS AS C ON FIND.IDCHALLENGS = C.ID
--JOIN PHASE AS PH ON PH.ID = C.IDPHASE
--JOIN MARKED AS M ON M.ID = C.IDMARKED
--JOIN LOCAL AS L ON L.ID = M.IDLOCAL
--JOIN THE_MATCH AS MA ON MA.ID = PH.IDMATCH
--JOIN AWARDS AS A ON A.IDMATCH = MA.ID AND A.VALUE = 'R$ 1.000.000,00';

--########################################### ALTERAÇÕES ME TEMPO DE EXECUÇÃO##############################################
--UPDATE FIND SET IDCHALLENGS = 0 WHERE ID = 0;
--UPDATE FIND SET IDCHALLENGS = 1 WHERE ID = 1;

--UPDATE CHALLENGS SET IDMARKED = 0 WHERE ID = 0;
--UPDATE CHALLENGS SET IDMARKED = 1 WHERE ID = 1;
--UPDATE CHALLENGS SET IDMARKED = 2 WHERE ID = 1;
--UPDATE CHALLENGS SET IDMARKED = 3 WHERE ID = 2;

--SELECT P.PLAYER_NAME, F.POSITION, T.TEAM_NAME, FIND.WINNER, FIND.POINTS, PH.PHASE_NAME, M.DATE, M.TIME, L.NEIGHBORHOOD
--FROM PLAYER AS P
--JOIN FILL AS F ON P.NICKNAME = F.PLAYER_NICKNAME
--JOIN TEAM AS T ON F.IDTEAM = T.ID AND F.POSITION = 'CAPITÃO'
--JOIN FIND ON FIND.IDTEAM = T.ID
--JOIN CHALLENGS AS C ON FIND.IDCHALLENGS = C.ID
--JOIN PHASE AS PH ON PH.ID = C.IDPHASE
--JOIN MARKED AS M ON M.ID = C.IDMARKED
--JOIN LOCAL AS L ON L.ID = M.IDLOCAL;

SELECT *  FROM phase;
SELECT *  FROM marked;
SELECT *  FROM CHALLENGS;
SELECT *  FROM find;
